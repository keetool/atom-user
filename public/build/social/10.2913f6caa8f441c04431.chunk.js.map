{"version":3,"sources":["webpack:///./src/modules/Home/ListPost.js","webpack:///./src/modules/Home/index.js","webpack:///./src/entity/ScrollView.js","webpack:///./src/components/HOC/scrollTopView.js","webpack:///./src/apis/notificationApis.js","webpack:///./src/helpers/notification/notification.js","webpack:///./src/modules/Notification/Noti/Store.js","webpack:///./src/modules/Notification/Store.js","webpack:///./src/modules/Home/styles.less?528f","webpack:///./src/modules/Home/Store.js"],"names":["_react","__webpack_require__","_propTypes","_Post","_Loading","_styles","_bind","_mobxReact","_ScrollView","_reactI18next","_Store","cx","classNamesBind","bind","styles","listId","ListPost","observer","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","getPosts","store","isLoadMore","renderEmpty","_this$props","prefixCls","t","isEmpty","_react2","default","createElement","className","Store","scrollView","ScrollView","isLoading","addEventScroll","_props","posts","id","length","map","storePost","index","key","_Post2","_Loading2","React","Component","defaultProps","propTypes","PropTypes","object","isRequired","translate","namespaces","_EditorPost","_ListPost","_withTitle","_scrollTopView","Home","_EditorPost2","addPost","_ListPost2","_withTitle2","_scrollTopView2","handle","distance","arguments","undefined","document","addEventListener","trackScrolling","wrappedElement","getElementById","isBottom","removeEventListener","el","getBoundingClientRect","bottom","window","innerHeight","_reactRouter","scrollTopView","WrappedComponent","WebTitle","_Component","_inherits","_ref","_temp","_ret","_len","args","Array","_key","apply","concat","scrollTop","scrollTo","_createClass","value","render","withRouter","getNotificationsApi","getNotificationsByMerchantApi","seenNotificationApi","_axios","_env","notiID","url","MERCHANT_API_URL","axios","get","put","splitKeyData","convertTypeNotiToKey","getContentNotiWithoutData","getContentNotiWithData","getDataNotification","linkNotification","_i18n","_utility","prefixKey","keyLanguageData","user","post_creator","linkWithNotificationType","post.vote.up.create","link","action_web","post.vote.down.create","post.comment.create","str","re","arr","match","data","replace","type","i18n","interpolation","prefix","suffix","config","escapeValue","dataLang","translateI18n","convertDataDetailServer","detail","forEach","itemDetail","getDataLanguge","dataInput","keyData","keyLanguage","getValueObjectFromStringKey","convertNotiData","strLanguage","route","linkRoute","_defineProperty","_mobx","_notification","_httpRequest","_notificationApis","notification","_initDefineProp","_descriptor","_descriptor2","notificationId","res","httpSuccess","status","error","messageHttpRequest","_context","t0","observable","action","computed","_message","lastNoti","getLastArr","notifications","lastNotiID","_toConsumableArray","createStoreNotifications","meta","remain_total","total","pagination","messageError","storeNotification","createStoreNotification","StoreNotification","isEmptyArr","module","exports","module-home-empty","module-home-empty-text","module-home-header","module-home-container","module-home-header-fixed-top","_postApis","lastPost","lastPostID","post","getPostsApi","createStorePosts","createStorePost","StorePost","handleDelete","handleDeletePost","newPost","_this2","postID","console","log","_this3","filter","postStore"],"mappings":"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","file":"10.2913f6caa8f441c04431.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from \"../../components/Post/Post\";\nimport Loading from \"../../components/Post/Loading\";\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport {observer} from \"mobx-react\";\nimport ScrollView from \"../../entity/ScrollView\";\nimport {translate} from \"react-i18next\";\nimport Store from \"../Notification/Store\";\n\nlet cx = classNamesBind.bind(styles);\n\nconst listId = \"list-post\";\n\n@observer\nclass ListPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.store = new Store();\n        this.scrollView = new ScrollView(listId, this.getPosts);\n    }\n\n    componentDidUpdate() {\n        const {isLoading} = this.store;\n        if (!isLoading) {\n            this.scrollView.addEventScroll();\n        }\n    }\n\n    getPosts = () => {\n        const {store} = this.props;\n        if (store.isLoadMore) {\n            store.getPosts();\n        }\n    };\n\n    renderEmpty = () => {\n        const {store, prefixCls, t} = this.props;\n        const {isEmpty} = store;\n        if (isEmpty) {\n            return (\n                <div className={cx(`${prefixCls}-empty`)}>\n                    <div className={cx(`${prefixCls}-empty-text`)}>\n                        {t('social.home.noti.empty')}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div/>\n            );\n        }\n    };\n\n    render() {\n        const {store, prefixCls} = this.props;\n        const {posts, isLoading} = store;\n        return (\n            <div\n                id={listId}\n                className={cx(`${prefixCls}-layout-posts`)}\n            >\n                {\n                    posts && posts.length > 0 ?\n                        (\n                            posts.map((storePost, index) => {\n                                    return (\n                                        <div key={index}>\n                                            <Post store={storePost} key={index}/>\n                                        </div>\n                                    );\n                                }\n                            )\n                        )\n                        :\n                        (\n                            isLoading &&\n                            <div>\n                                <Loading/>\n                                <Loading/>\n                            </div>\n                        )\n\n                }\n                {\n                    isLoading && <Loading/>\n                }\n                {\n                    this.renderEmpty()\n                }\n            </div>\n\n        );\n    }\n}\n\nListPost.defaultProps = {\n    prefixCls: 'module-home'\n};\n\nListPost.propTypes = {\n    store: PropTypes.object.isRequired,\n};\n\n\nexport default translate(props => props.namespaces)(ListPost);","import React from 'react';\n// import Header from \"./Header\";\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport EditorPost from \"../../components/EditorPost\";\nimport Posts from \"./ListPost\";\nimport {observer} from \"mobx-react\";\nimport Store from \"./Store\";\nimport withTitle from \"../../components/HOC/withTitle\";\nimport scrollTopView from \"../../components/HOC/scrollTopView\";\n\nlet cx = classNamesBind.bind(styles);\n\n// const HEADER_FIXED_TOP = true;\n@observer\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.store = new Store();\n    }\n\n    componentDidMount() {\n        this.store.getPosts();\n    }\n\n    render() {\n        const {prefixCls} = this.props;\n        return (\n            <div>\n                {/*<Header fixed={HEADER_FIXED_TOP}/>*/}\n                <div className={cx(`${prefixCls}-container`\n                    // \"header-fixed-top\": HEADER_FIXED_TOP\n                )}>\n                    <EditorPost addPost={this.store.addPost}/>\n                    <Posts store={this.store}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nHome.defaultProps = {\n    prefixCls: 'module-home'\n};\n\nexport default withTitle()(scrollTopView()(Home));","class ScrollView {\n    id = null;\n    distance = 0;\n    handle = null;\n\n    constructor(id, handle, distance = 500) {\n        this.id = id;\n        this.handle = handle;\n        this.distance = distance;\n    }\n\n\n    addEventScroll = () => {\n        document.addEventListener('scroll', this.trackScrolling);\n    };\n\n    trackScrolling = () => {\n        const wrappedElement = document.getElementById(this.id);\n        if (this.isBottom(wrappedElement)) {\n            if (this.handle) {\n                this.handle();\n            }\n            document.removeEventListener('scroll', this.trackScrolling);\n        }\n    };\n\n    isBottom = (el) => {\n        return el.getBoundingClientRect().bottom - this.distance <= window.innerHeight;\n    };\n}\n\nexport default ScrollView;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router\";\n\nconst scrollTopView = () => {\n    return WrappedComponent => {\n        class WebTitle extends Component {\n\n            scrollTop = () => {\n                window.scrollTo(0, 0);\n            };\n\n            render() {\n                this.scrollTop();\n                return (\n                    <WrappedComponent {...this.props}/>\n                );\n            }\n        }\n\n        return withRouter(WebTitle);\n    };\n};\n\nexport default scrollTopView;\n","import axios from \"axios\";\nimport {MERCHANT_API_URL} from \"../constants/env\";\n\nexport function getNotificationsApi(notiID = '') {\n    let url = MERCHANT_API_URL + `v1/user/notification/after/${notiID}`;\n\n    return axios.get(url);\n}\n\nexport function getNotificationsByMerchantApi(notiID = '') {\n    let url = MERCHANT_API_URL + `v1/user/notification/merchant/after/${notiID}`;\n\n    return axios.get(url);\n}\n\nexport function seenNotificationApi(notiID) {\n    let url = MERCHANT_API_URL + `v1/user/notification/${notiID}/seen`;\n\n    return axios.put(url);\n}\n","import i18n, {translateI18n} from '../../languages/i18n';\nimport {getValueObjectFromStringKey, linkRoute} from \"../utility\";\n\nconst prefixKey = 'social.notification.type';\n\n// key of value language with key object data\nconst keyLanguageData = {\n    \"user\": \"user\",\n    \"post_creator\": \"post.creator\",\n};\n\nconst linkWithNotificationType = {\n    \"post.vote.up.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n    \"post.vote.down.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n    \"post.comment.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n};\n\nexport function splitKeyData(str) {\n    let re = /{{\\S+}}/g;\n\n    const arr = str.match(re);\n    if (arr) {\n        return str.match(re).map(function (data) {\n            return data.replace(/{/g, \"\").replace(/}/g, \"\");\n        });\n    } else {\n        return [];\n    }\n}\n\nexport function convertTypeNotiToKey(type) {\n    return prefixKey + \".\" + type.replace(/\\./g, \"_\");\n}\n\nexport function getContentNotiWithoutData(key) {\n    return i18n.t(key, {\n        interpolation: {\n            prefix: `__`, //i18n don't convert key data\n            suffix: `__`,//i18n don't convert key data\n        }\n    });\n}\n\nexport function getContentNotiWithData(key, data) {\n\n    const config = {\n        interpolation: {\n            escapeValue: false\n        }\n    };\n\n    const dataLang = {...data, ...config};\n\n    return translateI18n(key, dataLang);\n}\n\n/**\n *\n * @param detail\n * \"detail\": [\n {\n     \"type\": \"user\",\n     \"data\": {\n         \"name\": \"Dat Vi Thanh\",\n     }\n }]\n *  => {user: {\"name\": \"Dat Vi Thanh\"}\n */\nfunction convertDataDetailServer(detail) {\n    let data = {};\n\n    detail.forEach((itemDetail) => {\n        data[itemDetail.type] = itemDetail.data;\n    });\n\n    return data;\n}\n\nfunction getDataLanguge(dataInput, keyData) {\n\n    let data = {};\n\n    keyData.forEach((key) => {\n\n        const keyLanguage = keyLanguageData[key];\n\n        data[key] = getValueObjectFromStringKey(dataInput, keyLanguage);\n\n    });\n\n    return data;\n}\n\nfunction convertNotiData(dataInput, type) {\n\n    const key = convertTypeNotiToKey(type);\n    const strLanguage = getContentNotiWithoutData(key);\n    const keyData = splitKeyData(strLanguage);\n\n    return getDataLanguge(dataInput, keyData);\n\n}\n\nexport function getDataNotification(detail, type) {\n\n    let data = convertDataDetailServer(detail);\n\n    return convertNotiData(data, type);\n}\n\nexport function linkNotification(type, data) {\n    const route = linkWithNotificationType[type];\n    return linkRoute(route.link, {[route.action_web]: data});\n}","import {computed, observable, action} from \"mobx\";\nimport {\n    getDataNotification\n} from \"../../../helpers/notification/notification\";\nimport {httpSuccess, messageHttpRequest} from \"../../../helpers/httpRequest\";\nimport {seenNotificationApi} from \"../../../apis/notificationApis\";\n\nclass Store {\n    @observable notification = null;\n    @observable error = null;\n\n    constructor(notification) {\n\n        notification.data = getDataNotification(notification.detail, notification.type);\n\n        this.notification = notification;\n    }\n\n    @action\n    async seenNotification() {\n        try {\n            const notificationId = this.notification.id;\n            const res = await seenNotificationApi(notificationId);\n            // const data = res.data;\n\n            if (!httpSuccess(res.status)) {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        }\n    }\n\n    @computed get isUnseen() {\n        return this.notification && this.notification.status == 'unseen';\n    }\n}\n\nexport default Store;","import {observable, action, computed} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../helpers/httpRequest\";\nimport {getLastArr, isEmpty, isEmptyArr} from \"../../helpers/utility\";\nimport StoreNotification from \"./Noti/Store\";\nimport {getNotificationsByMerchantApi} from \"../../apis/notificationApis\";\nimport {messageError} from \"../../helpers/message\";\n\nclass Store {\n    @observable notifications = [];\n    @observable isLoading = false;\n    @observable error = null;\n    @observable pagination = {};\n\n    @action\n    async getNotifications() {\n\n        if (this.isLoading) return;\n\n        this.isLoading = true;\n        this.error = null;\n        const lastNoti = getLastArr(this.notifications);\n        const lastNotiID = lastNoti ? lastNoti.notification.id : '';\n        try {\n            const res = await getNotificationsByMerchantApi(lastNotiID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const notifications = data.data;\n                this.notifications = [...this.notifications, ...this.createStoreNotifications(notifications)];\n                data.meta.remain_total = data.meta.total - notifications.length;\n                this.pagination = data.meta;\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n            if (!isEmpty(this.error)) {\n                messageError(this.error);\n            }\n        }\n    }\n\n    @action addNotification(notification) {\n        if (this.isLoading) return;\n\n        const storeNotification = this.createStoreNotification(notification);\n\n        this.notifications = [storeNotification, ...this.notifications];\n    }\n\n    @computed get isEmpty() {\n        return !this.isLoading && !this.error && isEmptyArr(this.notifications);\n    }\n\n    @computed get isLoadMore() {\n        return this.pagination.remain_total > 0;\n    }\n\n    createStoreNotifications(notifications) {\n        return notifications.map((notification) => {\n            return this.createStoreNotification(notification);\n        });\n    }\n\n    createStoreNotification(notification) {\n        return new StoreNotification(notification);\n    }\n}\n\nexport default Store;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"module-home-empty\":\"__2nvkb_\",\"module-home-empty-text\":\"__1q9qO8\",\"module-home-header\":\"__KXn3HT\",\"module-home-container\":\"__1kkA_f\",\"module-home-header-fixed-top\":\"__de78sW\"};","import {observable, action, computed} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../helpers/httpRequest\";\nimport {getPostsApi} from \"../../apis/postApis\";\nimport {getLastArr, isEmpty, isEmptyArr} from \"../../helpers/utility\";\nimport StorePost from \"../../components/Post/Store\";\nimport {messageError} from \"../../helpers/message\";\n\nclass Store {\n    @observable posts = [];\n    @observable isLoading = false;\n    @observable error = null;\n    @observable pagination = {};\n\n    @action\n    async getPosts() {\n\n        if (this.isLoading) return;\n\n        this.isLoading = true;\n        this.error = null;\n        const lastPost = getLastArr(this.posts);\n        const lastPostID = lastPost ? lastPost.post.id : '';\n        try {\n            const res = await getPostsApi(lastPostID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const posts = data.data;\n                this.posts = [...this.posts, ...this.createStorePosts(posts)];\n                data.meta.remain_total = data.meta.total - posts.length;\n                this.pagination = data.meta;\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n            if (!isEmpty(this.error)) {\n                messageError(this.error);\n            }\n        }\n    }\n\n    @action addPost = (post) => {\n        const newPost = this.createStorePost(post);\n        this.posts = [newPost, ...this.posts];\n    };\n\n    @action handleDeletePost = (postID) => {\n        console.log(this.posts);\n        this.posts = this.posts.filter(postStore => postStore.post.id !== postID);\n    };\n\n    createStorePosts(posts) {\n        return posts.map((post) => {\n            return this.createStorePost(post);\n        });\n    }\n\n    createStorePost(post) {\n        return new StorePost(post, {handleDelete: this.handleDeletePost});\n    }\n\n    @computed get isEmpty() {\n        return !this.isLoading && !this.error && isEmptyArr(this.posts);\n    }\n\n    @computed get isLoadMore() {\n        return this.pagination.remain_total > 0;\n    }\n}\n\n\nexport default Store;\n"],"sourceRoot":""}