{"version":3,"sources":["webpack:///./src/helpers/message.js","webpack:///./src/components/Avatar/index.js","webpack:///./src/components/HOC/loadingComponent.js","webpack:///./src/entity/ScrollView.js","webpack:///./src/helpers/time.js","webpack:///./src/components/Avatar/styles.less?5400","webpack:///./src/apis/notificationApis.js","webpack:///./src/helpers/notification/notification.js","webpack:///./src/services/socketEvent.js","webpack:///./src/services/socketio.js","webpack:///./src/modules/Notification/Noti/Store.js","webpack:///./src/modules/Notification/Store.js","webpack:///./src/modules/Notification/Noti/styles.less?fcef","webpack:///./src/helpers/notification/parseNotification.js","webpack:///./src/modules/Notification/Noti/Notification.js","webpack:///./src/modules/Notification/Noti/Loading.js","webpack:///./src/modules/Notification/styles.less?e0ea","webpack:///./src/modules/Notification/index.js"],"names":["messageSuccess","messageError","messageWarning","_constants","__webpack_require__","text","top","arguments","length","undefined","DISTANCE_TOP_MESSAGE_HOME","duration","_message3","default","config","success","error","warning","_react","_propTypes","_styles","_bind","cx","classNamesBind","bind","styles","Avatar","_ref","_ref$url","url","_ref$size","size","_ref$style","style","_react2","createElement","className","avatar","_extends","backgroundImage","width","height","propTypes","PropTypes","string","isRequired","number","object","_reactPlaceholder","loadingComponent","WrappedComponent","ComponentLoading","_Component","_inherits","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","_createClass","key","value","render","_reactPlaceholder2","ready","type","customPlaceholder","Component","ScrollView","id","handle","_this","distance","addEventScroll","document","addEventListener","trackScrolling","wrappedElement","getElementById","isBottom","removeEventListener","el","getBoundingClientRect","bottom","window","innerHeight","formatTime","convertTime","relativeTime","fullRelativeTime","_utility","_moment","time","format","capitalizeFirstLetter","moment","unix","currentTimestamp","_moment2","startOf","fromNow","module","exports","getNotificationsApi","getNotificationsByMerchantApi","seenNotificationApi","_axios","_env","notiID","MERCHANT_API_URL","axios","get","put","splitKeyData","convertTypeNotiToKey","getContentNotiWithoutData","getContentNotiWithData","getDataNotification","linkNotification","_i18n","prefixKey","keyLanguageData","user","post_creator","linkWithNotificationType","post.vote.up.create","link","action_web","post.vote.down.create","post.comment.create","str","re","arr","match","map","data","replace","i18n","t","interpolation","prefix","suffix","escapeValue","dataLang","translateI18n","convertDataDetailServer","detail","forEach","itemDetail","getDataLanguge","dataInput","keyData","keyLanguage","getValueObjectFromStringKey","convertNotiData","strLanguage","route","linkRoute","_defineProperty","CREATE_COMMENT","CREATE_NOTIFICATION","CREATE_POST","_socket","SOCKET_HOST","SOCKET_PORT","socket","_socket2","_mobx","_notification","_httpRequest","_notificationApis","Store","notification","_initDefineProp","_descriptor","_descriptor2","notificationId","res","httpSuccess","status","messageHttpRequest","_context","t0","observable","action","computed","_Store","_message","isLoading","lastNoti","getLastArr","notifications","lastNotiID","concat","_toConsumableArray","createStoreNotifications","meta","remain_total","total","pagination","isEmpty","storeNotification","createStoreNotification","StoreNotification","isEmptyArr","notification-container","notification-container-body","notification-unseen","notification-content-time","parseNotification","parseUser","userID","message","name","parsePostCreator","parse","convert","result","dataOutput","keys","contentNoti","_mobxReact","_reactI18next","_AccountContext","_Avatar","_parseNotification","_time","_reactRouterDom","Notification","observer","handleClickNoti","store","props","seenNotification","_props","prefixCls","account","notificationContent","_parseNotification2","linkNoti","notificationUnseen","isUnseen","Link","to","onClick","_Avatar2","image_url","dangerouslySetInnerHTML","__html","created_at","React","defaultProps","translate","namespaces","withAccount","_loadingComponent","_placeholders","Loading","RoundShape","color","TextBlock","rows","_loadingComponent2","module-notification-layout","module-notification-layout-empty","module-notification-layout-empty-text","_Loading","_withTitle","_Notification","_socketio","_socketEvent","_ScrollView","listId","ListNotification","call","getNotis","isLoadMore","getNotifications","renderLoading","_Loading2","scrollView","_this2","channel","SUBDOMAIN","on","receiverID","addNotification","_store","storeNoti","index","_Notification2","renderEmptyNoti","_withTitle2"],"mappings":"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","file":"12.2913f6caa8f441c04431.chunk.js","sourcesContent":["import {message} from \"antd\";\nimport {DISTANCE_TOP_MESSAGE_HOME} from \"../constants\";\n\nexport function messageSuccess(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.success(text, duration);\n}\n\nexport function messageError(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.error(text, duration);\n}\n\nexport function messageWarning(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.warning(text, duration);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\n\nlet cx = classNamesBind.bind(styles);\n\nconst Avatar = ({url = '', size = 30, style = {}}) => {\n    return (\n        <div className={cx({\n            \"avatar\": true\n        })}\n             style={{\n                 backgroundImage: `url(${url})`,\n                 width: size,\n                 height: size,\n                 ...style\n             }}\n        />\n    );\n};\n\n\nAvatar.propTypes = {\n    url: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    style: PropTypes.object,\n};\n\nexport default Avatar;","import React, {Component} from \"react\";\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\n\nconst loadingComponent = () => {\n    return WrappedComponent => {\n        class ComponentLoading extends Component {\n            render() {\n                return (\n                    <div className={\"show-loading-animation\"}>\n                        <ReactPlaceholder\n                            ready={false}\n                            type={\"text\"}\n                            customPlaceholder={<WrappedComponent/>}\n                        >\n                            <div/>\n                        </ReactPlaceholder>\n                    </div>\n\n                );\n            }\n        }\n\n        return ComponentLoading;\n    };\n};\n\nexport default loadingComponent;\n","class ScrollView {\n    id = null;\n    distance = 0;\n    handle = null;\n\n    constructor(id, handle, distance = 500) {\n        this.id = id;\n        this.handle = handle;\n        this.distance = distance;\n    }\n\n\n    addEventScroll = () => {\n        document.addEventListener('scroll', this.trackScrolling);\n    };\n\n    trackScrolling = () => {\n        const wrappedElement = document.getElementById(this.id);\n        if (this.isBottom(wrappedElement)) {\n            if (this.handle) {\n                this.handle();\n            }\n            document.removeEventListener('scroll', this.trackScrolling);\n        }\n    };\n\n    isBottom = (el) => {\n        return el.getBoundingClientRect().bottom - this.distance <= window.innerHeight;\n    };\n}\n\nexport default ScrollView;","import {capitalizeFirstLetter} from \"./utility\";\nimport moment from \"moment\";\n\nexport function formatTime(time, format = \"llll\") {\n    return capitalizeFirstLetter(convertTime(time).format(format));\n}\n\n/**\n * convert timestamp to moment\n */\nexport function convertTime(time) {\n    return moment.unix(time);\n}\n\nexport function relativeTime(time) {\n    const currentTimestamp = moment().unix();\n    if (currentTimestamp - time > 24 * 60 * 60) {\n        return formatTime(time);\n    }\n    return capitalizeFirstLetter(convertTime(time).startOf('minute').fromNow());\n}\n\nexport function fullRelativeTime(time) {\n    return capitalizeFirstLetter(convertTime(time).startOf('minute').fromNow());\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"__1uaVwP\"};","import axios from \"axios\";\nimport {MERCHANT_API_URL} from \"../constants/env\";\n\nexport function getNotificationsApi(notiID = '') {\n    let url = MERCHANT_API_URL + `v1/user/notification/after/${notiID}`;\n\n    return axios.get(url);\n}\n\nexport function getNotificationsByMerchantApi(notiID = '') {\n    let url = MERCHANT_API_URL + `v1/user/notification/merchant/after/${notiID}`;\n\n    return axios.get(url);\n}\n\nexport function seenNotificationApi(notiID) {\n    let url = MERCHANT_API_URL + `v1/user/notification/${notiID}/seen`;\n\n    return axios.put(url);\n}\n","import i18n, {translateI18n} from '../../languages/i18n';\nimport {getValueObjectFromStringKey, linkRoute} from \"../utility\";\n\nconst prefixKey = 'social.notification.type';\n\n// key of value language with key object data\nconst keyLanguageData = {\n    \"user\": \"user\",\n    \"post_creator\": \"post.creator\",\n};\n\nconst linkWithNotificationType = {\n    \"post.vote.up.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n    \"post.vote.down.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n    \"post.comment.create\": {\n        link: '/post/:postID',\n        action_web: 'postID'\n    },\n};\n\nexport function splitKeyData(str) {\n    let re = /{{\\S+}}/g;\n\n    const arr = str.match(re);\n    if (arr) {\n        return str.match(re).map(function (data) {\n            return data.replace(/{/g, \"\").replace(/}/g, \"\");\n        });\n    } else {\n        return [];\n    }\n}\n\nexport function convertTypeNotiToKey(type) {\n    return prefixKey + \".\" + type.replace(/\\./g, \"_\");\n}\n\nexport function getContentNotiWithoutData(key) {\n    return i18n.t(key, {\n        interpolation: {\n            prefix: `__`, //i18n don't convert key data\n            suffix: `__`,//i18n don't convert key data\n        }\n    });\n}\n\nexport function getContentNotiWithData(key, data) {\n\n    const config = {\n        interpolation: {\n            escapeValue: false\n        }\n    };\n\n    const dataLang = {...data, ...config};\n\n    return translateI18n(key, dataLang);\n}\n\n/**\n *\n * @param detail\n * \"detail\": [\n {\n     \"type\": \"user\",\n     \"data\": {\n         \"name\": \"Dat Vi Thanh\",\n     }\n }]\n *  => {user: {\"name\": \"Dat Vi Thanh\"}\n */\nfunction convertDataDetailServer(detail) {\n    let data = {};\n\n    detail.forEach((itemDetail) => {\n        data[itemDetail.type] = itemDetail.data;\n    });\n\n    return data;\n}\n\nfunction getDataLanguge(dataInput, keyData) {\n\n    let data = {};\n\n    keyData.forEach((key) => {\n\n        const keyLanguage = keyLanguageData[key];\n\n        data[key] = getValueObjectFromStringKey(dataInput, keyLanguage);\n\n    });\n\n    return data;\n}\n\nfunction convertNotiData(dataInput, type) {\n\n    const key = convertTypeNotiToKey(type);\n    const strLanguage = getContentNotiWithoutData(key);\n    const keyData = splitKeyData(strLanguage);\n\n    return getDataLanguge(dataInput, keyData);\n\n}\n\nexport function getDataNotification(detail, type) {\n\n    let data = convertDataDetailServer(detail);\n\n    return convertNotiData(data, type);\n}\n\nexport function linkNotification(type, data) {\n    const route = linkWithNotificationType[type];\n    return linkRoute(route.link, {[route.action_web]: data});\n}","export const CREATE_COMMENT = 'comment.create';\nexport const CREATE_NOTIFICATION = 'notification.create';\nexport const CREATE_POST = 'post.create';","import io from 'socket.io-client';\nimport {SOCKET_PORT, SOCKET_HOST} from '../constants/env';\n\nconst url = `${SOCKET_HOST}:${SOCKET_PORT}`;\n\nconst socket = io(url);\n\nexport default socket;","import {computed, observable, action} from \"mobx\";\nimport {\n    getDataNotification\n} from \"../../../helpers/notification/notification\";\nimport {httpSuccess, messageHttpRequest} from \"../../../helpers/httpRequest\";\nimport {seenNotificationApi} from \"../../../apis/notificationApis\";\n\nclass Store {\n    @observable notification = null;\n    @observable error = null;\n\n    constructor(notification) {\n\n        notification.data = getDataNotification(notification.detail, notification.type);\n\n        this.notification = notification;\n    }\n\n    @action\n    async seenNotification() {\n        try {\n            const notificationId = this.notification.id;\n            const res = await seenNotificationApi(notificationId);\n            // const data = res.data;\n\n            if (!httpSuccess(res.status)) {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        }\n    }\n\n    @computed get isUnseen() {\n        return this.notification && this.notification.status == 'unseen';\n    }\n}\n\nexport default Store;","import {observable, action, computed} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../helpers/httpRequest\";\nimport {getLastArr, isEmpty, isEmptyArr} from \"../../helpers/utility\";\nimport StoreNotification from \"./Noti/Store\";\nimport {getNotificationsByMerchantApi} from \"../../apis/notificationApis\";\nimport {messageError} from \"../../helpers/message\";\n\nclass Store {\n    @observable notifications = [];\n    @observable isLoading = false;\n    @observable error = null;\n    @observable pagination = {};\n\n    @action\n    async getNotifications() {\n\n        if (this.isLoading) return;\n\n        this.isLoading = true;\n        this.error = null;\n        const lastNoti = getLastArr(this.notifications);\n        const lastNotiID = lastNoti ? lastNoti.notification.id : '';\n        try {\n            const res = await getNotificationsByMerchantApi(lastNotiID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const notifications = data.data;\n                this.notifications = [...this.notifications, ...this.createStoreNotifications(notifications)];\n                data.meta.remain_total = data.meta.total - notifications.length;\n                this.pagination = data.meta;\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n            if (!isEmpty(this.error)) {\n                messageError(this.error);\n            }\n        }\n    }\n\n    @action addNotification(notification) {\n        if (this.isLoading) return;\n\n        const storeNotification = this.createStoreNotification(notification);\n\n        this.notifications = [storeNotification, ...this.notifications];\n    }\n\n    @computed get isEmpty() {\n        return !this.isLoading && !this.error && isEmptyArr(this.notifications);\n    }\n\n    @computed get isLoadMore() {\n        return this.pagination.remain_total > 0;\n    }\n\n    createStoreNotifications(notifications) {\n        return notifications.map((notification) => {\n            return this.createStoreNotification(notification);\n        });\n    }\n\n    createStoreNotification(notification) {\n        return new StoreNotification(notification);\n    }\n}\n\nexport default Store;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-container\":\"__1xnOoT\",\"notification-container-body\":\"__25kAVf\",\"notification-unseen\":\"__2IQ9mE\",\"notification-content-time\":\"__1fUrPs\"};","import i18n from \"../../languages/i18n\";\nimport {capitalizeFirstLetter} from \"../utility\";\nimport {convertTypeNotiToKey, getContentNotiWithData} from \"./notification\";\n\nfunction parseUser(data, userID) {\n    if (data.id == userID) {\n        return {\n            ...data,\n            message: i18n.t(\"social.global.you\")\n        };\n    } else {\n        return {\n            ...data,\n            message: data.name,\n            url: `/profile/${data.id}`\n        };\n    }\n}\n\nfunction parsePostCreator(data, userID) {\n    if (data.id == userID) {\n        return {\n            ...data,\n            message: i18n.t(\"social.global.your\")\n        };\n    } else {\n        return {\n            ...data,\n            message: data.name,\n            url: `/profile/${data.id}`\n        };\n    }\n}\n\nfunction parse(key, data, userID) {\n    switch (key) {\n        case \"user\":\n            return parseUser(data, userID);\n        case \"post_creator\":\n            return parsePostCreator(data, userID);\n        default:\n            return data;\n    }\n}\n\nfunction convert(data) {\n    let result = '';\n\n    if (data.url) {\n        result += `<a href=\"${data.url}\">${data.message}</a>`;\n        return result;\n    }\n\n    if (data.message) {\n        result += data.message;\n        return result;\n    }\n\n}\n\nexport default function parseNotification(notification, userID) {\n\n    const dataInput = notification.data;\n    const type = notification.type;\n\n    let dataOutput = {};\n\n    Object.keys(dataInput).forEach((key) => {\n        const data = parse(key, dataInput[key], userID);\n\n        dataOutput[key] = convert(data);\n    });\n\n    const keyLanguage = convertTypeNotiToKey(type);\n\n    const contentNoti = getContentNotiWithData(keyLanguage, dataOutput);\n\n    return capitalizeFirstLetter(contentNoti);\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {observer} from \"mobx-react\";\nimport {translate} from \"react-i18next\";\nimport {withAccount} from \"../../../components/context/AccountContext\";\nimport Avatar from \"../../../components/Avatar\";\nimport parseNotification from \"../../../helpers/notification/parseNotification\";\nimport {relativeTime} from \"../../../helpers/time\";\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport {Link} from \"react-router-dom\";\nimport {linkNotification} from \"../../../helpers/notification/notification\";\n\nlet cx = classNamesBind.bind(styles);\n\n@observer\nclass Notification extends React.Component {\n    componentDidMount() {\n    }\n\n    handleClickNoti = () => {\n        const {store} = this.props;\n        store.seenNotification();\n    };\n\n\n    render() {\n        const {prefixCls, account, store} = this.props;\n        const {notification} = store;\n        const notificationContent = parseNotification(notification, account.id);\n        const linkNoti = linkNotification(notification.type, notification.action_web);\n        const notificationUnseen = store.isUnseen;\n        return (\n            <Link to={linkNoti} onClick={this.handleClickNoti}>\n                <div className={cx(`${prefixCls}-container`, {[`${prefixCls}-unseen`]: notificationUnseen})}>\n                    <div className={cx(`${prefixCls}-avatar`)}>\n                        <Avatar url={notification.image_url}/>\n                    </div>\n                    <div className={cx(`${prefixCls}-container-body`)}>\n                        <div className={cx(`${prefixCls}-content-text`)}>\n                            <div dangerouslySetInnerHTML={{__html: notificationContent}}/>\n                        </div>\n                        <div className={cx(`${prefixCls}-content-time`)}>\n                            {relativeTime(notification.created_at)}\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        );\n    }\n}\n\nNotification.defaultProps = {\n    prefixCls: 'notification'\n};\n\nNotification.propTypes = {\n    store: PropTypes.object.isRequired\n};\n\nexport default translate(props => props.namespaces)(withAccount(Notification));\n","import React from \"react\";\nimport loadingComponent from \"../../../components/HOC/loadingComponent\";\nimport {RoundShape, TextBlock} from \"react-placeholder/lib/placeholders\";\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\n\nlet cx = classNamesBind.bind(styles);\n\n\nclass Loading extends React.Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const {prefixCls} = this.props;\n        return (\n            <div className={cx(`${prefixCls}-container`)}>\n                <div className={cx(`${prefixCls}-avatar`)}>\n                    <RoundShape color=\"#E0E0E0\" style={{width: 30, height: 30}}/>\n                </div>\n                <div className={cx(`${prefixCls}-container-body`)}>\n                    <div className={cx(`${prefixCls}-content-text`)}>\n                        <TextBlock rows={2} color=\"#E0E0E0\"/>\n                    </div>\n                    <div className={cx(`${prefixCls}-content-time`)} style={{width: '100px'}}>\n                        <TextBlock rows={1} color=\"#E0E0E0\"/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoading.defaultProps = {\n    prefixCls: 'notification'\n};\n\nLoading.propTypes = {};\n\nexport default loadingComponent()(Loading);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"module-notification-layout\":\"__1DIWM2\",\"module-notification-layout-empty\":\"__2zFdDv\",\"module-notification-layout-empty-text\":\"__1cnAsE\"};","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport {translate} from \"react-i18next\";\nimport classNamesBind from \"classnames/bind\";\nimport styles from './styles.less';\nimport Store from \"./Store\";\nimport Loading from \"./Noti/Loading\";\nimport withTitle from \"../../components/HOC/withTitle\";\nimport Notification from \"./Noti/Notification\";\nimport socket from \"../../services/socketio\";\nimport {CREATE_NOTIFICATION} from \"../../services/socketEvent\";\nimport {withAccount} from \"../../components/context/AccountContext\";\nimport {SUBDOMAIN} from \"../../constants/env\";\nimport {getValueObjectFromStringKey} from \"../../helpers/utility\";\nimport ScrollView from \"../../entity/ScrollView\";\n\nlet cx = classNamesBind.bind(styles);\n\nconst listId = \"list-noti\";\n\n@observer\nclass ListNotification extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.store = new Store();\n        this.scrollView = new ScrollView(listId, this.getNotis);\n    }\n\n    componentDidMount() {\n        this.store.getNotifications();\n\n        const channel = `${SUBDOMAIN}:${CREATE_NOTIFICATION}`;\n        socket.on(channel, (data) => {\n            const notification = data;\n            const {account} = this.props;\n            const receiverID = getValueObjectFromStringKey(notification, \"receiver.id\");\n            if (receiverID == account.id) {\n                this.store.addNotification(notification);\n            }\n        });\n    }\n\n\n    componentDidUpdate() {\n        const {isLoading} = this.store;\n        if (!isLoading) {\n            this.scrollView.addEventScroll();\n        }\n    }\n\n\n    getNotis = () => {\n        const store = this.store;\n        if (store.isLoadMore) {\n            store.getNotifications();\n        }\n    };\n\n    renderLoading = () => {\n        return (\n            <div>\n                <Loading/>\n                <Loading/>\n                <Loading/>\n                <Loading/>\n                <Loading/>\n                <Loading/>\n                <Loading/>\n            </div>\n        );\n    };\n\n    renderEmptyNoti() {\n        const {prefixCls, t} = this.props;\n        const {isEmpty} = this.store;\n        if (isEmpty) {\n            return (\n                <div className={cx(`${prefixCls}-layout-empty`)}>\n                    <div className={cx(`${prefixCls}-layout-empty-text`)}>\n                        {t('social.notification.noti.empty')}\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div/>);\n        }\n    }\n\n    render() {\n        const {prefixCls} = this.props;\n        const {notifications, isLoading} = this.store;\n        return (\n            <div\n                id={listId}\n                className={cx(`${prefixCls}-layout`)}>\n                {\n                    notifications && notifications.length > 0 ?\n                        (\n                            notifications.map((storeNoti, index) => {\n                                    return (\n                                        <div key={index}>\n                                            <Notification store={storeNoti} key={index}/>\n                                        </div>\n                                    );\n                                }\n                            )\n                        )\n                        :\n                        (\n                            isLoading && this.renderLoading()\n                        )\n\n                }\n                {\n                    isLoading && <Loading/>\n                }\n                {\n                    this.renderEmptyNoti()\n                }\n            </div>\n        );\n    }\n}\n\nListNotification.defaultProps = {\n    prefixCls: 'module-notification'\n};\n\nListNotification.propTypes = {};\n\nexport default translate(props => props.namespaces)(withTitle()(withAccount(ListNotification)));\n"],"sourceRoot":""}