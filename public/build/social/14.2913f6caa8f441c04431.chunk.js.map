{"version":3,"sources":["webpack:///./src/entity/ScrollView.js","webpack:///./src/components/HOC/scrollTopView.js","webpack:///./src/modules/Profile/styles.less?2571","webpack:///./src/modules/Profile/Posts/Store.js","webpack:///./src/apis/profileApis.js","webpack:///./src/modules/Profile/Information/Store.js","webpack:///./src/modules/Profile/Posts/ListPost.js","webpack:///./src/modules/Profile/Information/Loading.js","webpack:///./src/modules/Profile/Information/Information.js","webpack:///./src/modules/Profile/index.js"],"names":["ScrollView","id","handle","_this","this","distance","arguments","length","undefined","_classCallCheck","addEventScroll","document","addEventListener","trackScrolling","wrappedElement","getElementById","isBottom","removeEventListener","el","getBoundingClientRect","bottom","window","innerHeight","_react","__webpack_require__","_reactRouter","scrollTopView","WrappedComponent","WebTitle","_Component","_inherits","_ref","_temp","_ret","_len","args","Array","_key","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","apply","concat","scrollTop","scrollTo","_createClass","key","value","render","_react2","default","createElement","props","Component","withRouter","module","exports","module-profile-layout-info","module-profile-layout-info-container","module-profile-layout-info-container-info","module-profile-layout-info-info-name","module-profile-layout-info-info-edit","module-profile-layout-info-info-analytics","module-profile-layout-info-info-analytics-post","module-profile-layout-info-info-analytics-vote","module-profile-layout-info-info-analytics-comment","module-profile-layout-info-info-analytics-post-number","module-profile-layout-info-info-analytics-vote-number","module-profile-layout-info-info-analytics-comment-number","module-profile-divider","module-profile-vertical","module-profile-empty","module-profile-empty-text","_mobx","_httpRequest","_postApis","_utility","_Store","_message","Store","isLoading","error","lastPost","getLastArr","posts","lastPostID","post","getPostsByUserApi","userID","res","data","httpSuccess","status","isEmptyArr","_toConsumableArray","createStorePosts","isLoadMore","messageHttpRequest","_context","t0","isEmpty","messageError","map","createStorePost","StorePost","handleDelete","handleDeletePost","observable","action","_this2","resetStore","getPosts","_this3","newPost","_this4","postID","console","log","_this5","filter","postStore","computed","infoUserApi","_axios","_env","url","MERCHANT_API_URL","axios","get","_profileApis","info","getInfoUser","_propTypes","_Post","_Loading","_styles","_bind","_mobxReact","_ScrollView","_reactI18next","cx","classNamesBind","bind","styles","listId","ListPost","observer","store","renderEmpty","_this$props","prefixCls","t","className","scrollView","_props","storePost","index","_Post2","_Loading2","React","defaultProps","propTypes","PropTypes","object","isRequired","translate","namespaces","_loadingComponent","_placeholders","Loading","RoundShape","color","style","width","height","TextBlock","rows","paddingTop","_loadingComponent2","_Avatar","_constants","_AccountContext","_reactRouterDom","Information","renderAnalytics","_store$info","comments_count","posts_count","votes_count","account","history","location","pathname","linkProfile","linkRoute","getValueObjectFromStringKey","isShowEdit","checkLink","avatarUrl","avatar_url","LOGO","_Avatar2","size","name","Link","to","_button2","icon","withAccount","_withTitle","_Information","_ListPost","_Store3","_scrollTopView","Profile","state","storeInfo","InfoStore","storePosts","PostStore","_state","_Information2","_ListPost2","match","params","addUserID","_withTitle2","_scrollTopView2"],"mappings":"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","file":"14.2913f6caa8f441c04431.chunk.js","sourcesContent":["class ScrollView {\n    id = null;\n    distance = 0;\n    handle = null;\n\n    constructor(id, handle, distance = 500) {\n        this.id = id;\n        this.handle = handle;\n        this.distance = distance;\n    }\n\n\n    addEventScroll = () => {\n        document.addEventListener('scroll', this.trackScrolling);\n    };\n\n    trackScrolling = () => {\n        const wrappedElement = document.getElementById(this.id);\n        if (this.isBottom(wrappedElement)) {\n            if (this.handle) {\n                this.handle();\n            }\n            document.removeEventListener('scroll', this.trackScrolling);\n        }\n    };\n\n    isBottom = (el) => {\n        return el.getBoundingClientRect().bottom - this.distance <= window.innerHeight;\n    };\n}\n\nexport default ScrollView;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router\";\n\nconst scrollTopView = () => {\n    return WrappedComponent => {\n        class WebTitle extends Component {\n\n            scrollTop = () => {\n                window.scrollTo(0, 0);\n            };\n\n            render() {\n                this.scrollTop();\n                return (\n                    <WrappedComponent {...this.props}/>\n                );\n            }\n        }\n\n        return withRouter(WebTitle);\n    };\n};\n\nexport default scrollTopView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"module-profile-layout-info\":\"__1gFv1z\",\"module-profile-layout-info-container\":\"__3mG4-X\",\"module-profile-layout-info-container-info\":\"__3E80s8\",\"module-profile-layout-info-info-name\":\"__U1AFVa\",\"module-profile-layout-info-info-edit\":\"__3OJTDc\",\"module-profile-layout-info-info-analytics\":\"__27n5ig\",\"module-profile-layout-info-info-analytics-post\":\"__ZxCqrd\",\"module-profile-layout-info-info-analytics-vote\":\"__4W3dwu\",\"module-profile-layout-info-info-analytics-comment\":\"__3LiHOh\",\"module-profile-layout-info-info-analytics-post-number\":\"__2WGQj-\",\"module-profile-layout-info-info-analytics-vote-number\":\"__2VgtLv\",\"module-profile-layout-info-info-analytics-comment-number\":\"__1H2eUh\",\"module-profile-divider\":\"__1hbYJh\",\"module-profile-vertical\":\"__1bpX8A\",\"module-profile-empty\":\"__2-thwG\",\"module-profile-empty-text\":\"__Y5fRp6\"};","import {observable, action, computed} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../../helpers/httpRequest\";\nimport {getPostsByUserApi} from \"../../../apis/postApis\";\nimport {getLastArr, isEmpty, isEmptyArr} from \"../../../helpers/utility\";\nimport StorePost from \"../../../components/Post/Store\";\nimport {messageError} from \"../../../helpers/message\";\n\nclass Store {\n    @observable posts = [];\n    @observable isLoading = false;\n    @observable error = null;\n    @observable isLoadMore = true;\n    @observable userID = '';\n\n    @action addUserID = (userID) => {\n        this.resetStore();\n        this.userID = userID;\n        this.getPosts();\n    };\n\n    @action resetStore = () => {\n        this.posts = [];\n        this.isLoading = false;\n        this.error = null;\n        this.isLoadMore = true;\n        this.userID = '';\n    };\n\n    @action\n    async getPosts() {\n\n        if (this.isLoading) return;\n\n        this.isLoading = true;\n        this.error = null;\n        const lastPost = getLastArr(this.posts);\n        const lastPostID = lastPost ? lastPost.post.id : '';\n        try {\n            const res = await getPostsByUserApi(this.userID, lastPostID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const posts = data.data;\n                if (!isEmptyArr(posts)) {\n                    this.posts = [...this.posts, ...this.createStorePosts(posts)];\n                } else {\n                    this.isLoadMore = false;\n                }\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n            if (!isEmpty(this.error)) {\n                messageError(this.error);\n            }\n        }\n    }\n\n    @action addPost = (post) => {\n        const newPost = this.createStorePost(post);\n        this.posts = [newPost, ...this.posts];\n    };\n\n    @action handleDeletePost = (postID) => {\n        console.log(this.posts);\n        this.posts = this.posts.filter(postStore => postStore.post.id !== postID);\n    };\n\n    createStorePosts(posts) {\n        return posts.map((post) => {\n            return this.createStorePost(post);\n        });\n    }\n\n    createStorePost(post) {\n        return new StorePost(post, {handleDelete: this.handleDeletePost});\n    }\n\n    @computed get isEmpty() {\n        return !this.isLoading && !this.error && isEmptyArr(this.posts);\n    }\n}\n\n\nexport default Store;\n","import axios from \"axios\";\nimport {MERCHANT_API_URL} from \"../constants/env\";\n\nexport function infoUserApi(userID) {\n    let url = MERCHANT_API_URL + `v1/user/${userID}/profile`;\n    return axios.get(url);\n}\n\n","import {observable, action} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../../helpers/httpRequest\";\nimport {isEmpty} from \"../../../helpers/utility\";\nimport {messageError} from \"../../../helpers/message\";\nimport {infoUserApi} from \"../../../apis/profileApis\";\n\nclass Store {\n    @observable info = {};\n    @observable isLoading = false;\n    @observable error = null;\n    @observable userID = '';\n\n    @action addUserID = (userID) => {\n        this.resetStore();\n        this.userID = userID;\n        this.getInfoUser();\n    };\n\n    @action resetStore = () => {\n        this.info = {};\n        this.isLoading = false;\n        this.error = null;\n        this.userID = '';\n    };\n\n    @action\n    async getInfoUser() {\n\n        this.isLoading = true;\n        this.error = null;\n\n        try {\n            const res = await infoUserApi(this.userID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const info = data.data;\n                if (isEmpty(info)){\n                    throw \"null data\";\n                }\n                this.info = info;\n\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n            if (!isEmpty(this.error)) {\n                messageError(this.error);\n            }\n        }\n    }\n}\n\nexport default Store;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from \"../../../components/Post/Post\";\nimport Loading from \"../../../components/Post/Loading\";\nimport styles from '../styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport {observer} from \"mobx-react\";\nimport ScrollView from \"../../../entity/ScrollView\";\nimport {translate} from \"react-i18next\";\n\nlet cx = classNamesBind.bind(styles);\n\nconst listId = \"list-post-user\";\n\n@observer\nclass ListPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.scrollView = new ScrollView(listId, this.getPosts);\n    }\n\n    componentDidUpdate() {\n        const {store} = this.props;\n        const {isLoading} = store;\n        if (!isLoading) {\n            this.scrollView.addEventScroll();\n        }\n    }\n\n    getPosts = () => {\n        const {store} = this.props;\n        if (store.isLoadMore) {\n            store.getPosts();\n        }\n    };\n\n    renderEmpty = () => {\n        const {prefixCls, t, store} = this.props;\n        const {isEmpty} = store;\n        if (isEmpty) {\n            return (\n                <div className={cx(`${prefixCls}-empty`)}>\n                    <div className={cx(`${prefixCls}-empty-text`)}>\n                        {t('social.home.noti.empty')}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div/>\n            );\n        }\n    };\n\n    render() {\n        const {prefixCls, store} = this.props;\n        const {posts, isLoading} = store;\n        return (\n            <div\n                id={listId}\n                className={cx(`${prefixCls}-layout-posts`)}\n            >\n                {\n                    posts && posts.length > 0 ?\n                        (\n                            posts.map((storePost, index) => {\n                                    return (\n                                        <div key={index}>\n                                            <Post store={storePost} key={index}/>\n                                        </div>\n                                    );\n                                }\n                            )\n                        )\n                        :\n                        (\n                            isLoading &&\n                            <div>\n                                <Loading/>\n                                <Loading/>\n                            </div>\n                        )\n\n                }\n                {\n                    isLoading && <Loading/>\n                }\n                {\n                    this.renderEmpty()\n                }\n            </div>\n\n        );\n    }\n}\n\nListPost.defaultProps = {\n    prefixCls: 'module-profile'\n};\n\nListPost.propTypes = {\n    store: PropTypes.object.isRequired\n};\n\n\nexport default translate(props => props.namespaces)(ListPost);","import React from \"react\";\nimport loadingComponent from \"../../../components/HOC/loadingComponent\";\nimport {RoundShape, TextBlock} from \"react-placeholder/lib/placeholders\";\nimport styles from '../styles.less';\nimport classNamesBind from \"classnames/bind\";\n\nlet cx = classNamesBind.bind(styles);\n\n\nclass Loading extends React.Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const {prefixCls} = this.props;\n        return (\n            <div className={cx(`${prefixCls}-layout-info`)}>\n                <div className={cx(`${prefixCls}-layout-info-container`)}>\n                    <div className={cx(`${prefixCls}-layout-info-info-avatar`)}>\n                        <RoundShape color=\"#E0E0E0\" style={{width: 100, height: 100}}/>\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-info-container-info`)}>\n                        <div className={cx(`${prefixCls}-layout-info-info-name`)}>\n                            <TextBlock rows={1} color=\"#E0E0E0\"/>\n                        </div>\n                        <div className={cx(`${prefixCls}-layout-info-info-analytics`)} style={{paddingTop: '20px'}}>\n                            <TextBlock rows={2} color=\"#E0E0E0\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nLoading.defaultProps = {\n    prefixCls: 'module-profile'\n};\n\nLoading.propTypes = {};\n\nexport default loadingComponent()(Loading);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {translate} from \"react-i18next\";\nimport Loading from \"./Loading\";\nimport {observer} from \"mobx-react\";\nimport Avatar from \"../../../components/Avatar\";\nimport {checkLink, getValueObjectFromStringKey, linkRoute} from \"../../../helpers/utility\";\nimport {LOGO} from \"../../../constants\";\nimport styles from '../styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport {Button} from \"antd\";\nimport {withAccount} from \"../../../components/context/AccountContext\";\nimport {withRouter} from \"react-router\";\nimport {Link} from \"react-router-dom\";\n\nlet cx = classNamesBind.bind(styles);\n\n@observer\nclass Information extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderAnalytics = () => {\n        const {prefixCls, t, store} = this.props;\n        const {comments_count, posts_count, votes_count} = store.info;\n        return (\n            <div className={cx(`${prefixCls}-layout-info-info-analytics`)}>\n                <div className={cx(`${prefixCls}-layout-info-info-analytics-post`)}>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-post-number`)}>\n                        {posts_count}\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-comment-text`)}>\n                        {t('social.profile.info.post')}\n                    </div>\n                </div>\n                <div className={cx(`${prefixCls}-divider`, `${prefixCls}-vertical`)}/>\n                <div className={cx(`${prefixCls}-layout-info-info-analytics-vote`)}>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-vote-number`)}>\n                        {votes_count}\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-comment-text`)}>\n                        {t('social.profile.info.vote')}\n                    </div>\n                </div>\n                <div className={cx(`${prefixCls}-divider`, `${prefixCls}-vertical`)}/>\n                <div className={cx(`${prefixCls}-layout-info-info-analytics-comment`)}>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-comment-number`)}>\n                        {comments_count}\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-info-info-analytics-comment-text`)}>\n                        {t('social.profile.info.comment')}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const {prefixCls, t, store, account, history} = this.props;\n        const {isLoading, info} = store;\n        const {location} = history;\n        const {pathname} = location;\n\n        if (isLoading) {\n            return (<Loading/>);\n        }\n\n        const linkProfile = linkRoute(\"/profile/:userID\", {userID: getValueObjectFromStringKey(account, 'id')});\n\n        const isShowEdit = checkLink(pathname, linkProfile);\n\n        const avatarUrl = getValueObjectFromStringKey(info, \"avatar_url\") ? info.avatar_url : LOGO;\n\n        return (\n            <div className={cx(`${prefixCls}-layout-info`)}>\n                <div className={cx(`${prefixCls}-layout-info-container`)}>\n                    <div className={cx(`${prefixCls}-layout-info-info-avatar`)}>\n                        <Avatar url={avatarUrl} size={100}/>\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-info-container-info`)}>\n                        <div className={cx(`${prefixCls}-layout-info-info-name`)}>\n                            {info.name}\n                        </div>\n\n                        {this.renderAnalytics()}\n\n                        {\n                            isShowEdit &&\n                            <div className={cx(`${prefixCls}-layout-info-info-edit`)}>\n                                <Link to={'/profile/edit'}>\n                                    <Button icon={\"form\"}>{t('social.profile.info.edit')}</Button>\n                                </Link>\n\n                            </div>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nInformation.defaultProps = {\n    prefixCls: 'module-profile'\n};\n\nInformation.propTypes = {\n    store: PropTypes.object.isRequired\n};\n\nexport default translate(props => props.namespaces)(withAccount(withRouter(Information)));\n","import React from \"react\";\n//import PropTypes from 'prop-types';\nimport withTitle from \"../../components/HOC/withTitle\";\nimport Information from \"./Information/Information\";\nimport ListPost from \"./Posts/ListPost\";\nimport InfoStore from \"./Information/Store\";\nimport PostStore from \"./Posts/Store\";\nimport {withRouter} from \"react-router\";\nimport scrollTopView from \"../../components/HOC/scrollTopView\";\n\nclass Profile extends React.Component {\n\n\n    state = {\n        storeInfo: new InfoStore(),\n        storePosts: new PostStore(),\n        userID: ''\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const {userID} = props.match.params;\n        if (state.userID != userID) {\n            state.storeInfo.addUserID(userID);\n            state.storePosts.addUserID(userID);\n            return {userID: userID};\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        const {storeInfo, storePosts} = this.state;\n        return (\n            <div>\n                <Information store={storeInfo}/>\n                <ListPost store={storePosts}/>\n            </div>\n        );\n    }\n}\n\nProfile.propTypes = {};\n\nexport default withTitle()(withRouter(scrollTopView()(Profile)));\n"],"sourceRoot":""}