{"version":3,"sources":["webpack:///./src/helpers/message.js","webpack:///./src/components/Avatar/index.js","webpack:///./src/components/HOC/loadingComponent.js","webpack:///./src/components/Avatar/styles.less?5400","webpack:///./src/modules/EditProfile/styles.less?1a27","webpack:///./src/components/common/Icon.js","webpack:///./src/components/common/FormButton.js","webpack:///./src/components/HOC/generatorFormItem.js","webpack:///./src/components/common/FormInput.js","webpack:///./src/components/common/Form.js","webpack:///./src/modules/EditProfile/EditInfo.js","webpack:///./src/modules/EditProfile/Store.js","webpack:///./src/modules/EditProfile/Loading.js","webpack:///./src/modules/EditProfile/index.js"],"names":["messageSuccess","messageError","messageWarning","_constants","__webpack_require__","text","top","arguments","length","undefined","DISTANCE_TOP_MESSAGE_HOME","duration","_message3","default","config","success","error","warning","_react","_propTypes","_styles","_bind","cx","classNamesBind","bind","styles","Avatar","_ref","_ref$url","url","_ref$size","size","_ref$style","style","_react2","createElement","className","avatar","_extends","backgroundImage","width","height","propTypes","PropTypes","string","isRequired","number","object","_reactPlaceholder","loadingComponent","WrappedComponent","ComponentLoading","_Component","_inherits","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","_createClass","key","value","render","_reactPlaceholder2","ready","type","customPlaceholder","Component","module","exports","module-edit-profile-layout","module-edit-profile-layout-container","module-edit-profile-layout-container-info","module-edit-profile-info-submit","IconCustom","_icon2","color","props","FormButton","_form2","Item","_button2","children","htmlType","_utility","generatorFormItem","_class","_temp","FormItem","call","getFieldDecorator","context","form","_props","onChange","defaultValue","rules","name","options","initialValue","removeProp","contextTypes","_generatorFormItem","InputComponent","_generatorFormItem2","_input2","FormInput","getValue","_this","getFieldValue","setValue","setFieldsValue","_defineProperty","clear","addSuffixClearValueToProps","beforeProps","onClick","addPropsComponent","suffix","suffixClear","array","bool","CustomForm","handleSubmit","e","preventDefault","validateFieldsAndScroll","err","values","onSubmit","getForm","childContextTypes","func","create","_reactI18next","_Form","_FormInput","_FormButton","_mobxReact","_Icon","EditInfo","observer","updateProfileSuccess","data","account","updateAccount","_this$props","store","editInfoProfile","renderMessageError","content","_alert2","marginBottom","message","showIcon","t","prefixCls","isUploading","errorUpload","username","phone","email","_Form2","_FormInput2","required","prefix","_Icon2","placeholder","_FormButton2","loading","React","defaultProps","translate","namespaces","_mobx","_httpRequest","_message","_accountApis","_i18n","Store","dataAccount","callbackSuccess","editInfoUserApi","res","httpSuccess","status","info","translateI18n","messageHttpRequest","_context","t0","observable","action","_placeholders","_loadingComponent","Loading","RoundShape","TextBlock","rows","_loadingComponent2","_Loading","_Store","_Avatar","_EditInfo","_AccountContext","EditProfile","isLoading","_Loading2","avatarUrl","getValueObjectFromStringKey","avatar_url","LOGO","_Avatar2","_EditInfo2","withAccount"],"mappings":"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","file":"15.2913f6caa8f441c04431.chunk.js","sourcesContent":["import {message} from \"antd\";\nimport {DISTANCE_TOP_MESSAGE_HOME} from \"../constants\";\n\nexport function messageSuccess(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.success(text, duration);\n}\n\nexport function messageError(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.error(text, duration);\n}\n\nexport function messageWarning(text, top = DISTANCE_TOP_MESSAGE_HOME, duration = 2.5) {\n    message.config({\n        top: top\n    });\n    message.warning(text, duration);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\n\nlet cx = classNamesBind.bind(styles);\n\nconst Avatar = ({url = '', size = 30, style = {}}) => {\n    return (\n        <div className={cx({\n            \"avatar\": true\n        })}\n             style={{\n                 backgroundImage: `url(${url})`,\n                 width: size,\n                 height: size,\n                 ...style\n             }}\n        />\n    );\n};\n\n\nAvatar.propTypes = {\n    url: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    style: PropTypes.object,\n};\n\nexport default Avatar;","import React, {Component} from \"react\";\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\n\nconst loadingComponent = () => {\n    return WrappedComponent => {\n        class ComponentLoading extends Component {\n            render() {\n                return (\n                    <div className={\"show-loading-animation\"}>\n                        <ReactPlaceholder\n                            ready={false}\n                            type={\"text\"}\n                            customPlaceholder={<WrappedComponent/>}\n                        >\n                            <div/>\n                        </ReactPlaceholder>\n                    </div>\n\n                );\n            }\n        }\n\n        return ComponentLoading;\n    };\n};\n\nexport default loadingComponent;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"__1uaVwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"module-edit-profile-layout\":\"__3wJ6SD\",\"module-edit-profile-layout-container\":\"__2yxnwL\",\"module-edit-profile-layout-container-info\":\"__1jw6pU\",\"module-edit-profile-info-submit\":\"__3z3387\"};","import React, { Component } from \"react\";\nimport { Icon } from \"antd\";\n\nexport default class IconCustom extends Component {\n  render() {\n    return <Icon style={{ color: \"rgba(0,0,0,.25)\" }} {...this.props} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form } from \"antd\";\n\nexport default class FormButton extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    htmlType: PropTypes.string,\n    size: PropTypes.string,\n    className: PropTypes.string\n  };\n\n  render() {\n    return (\n      <Form.Item>\n        <Button {...this.props}>{this.props.children}</Button>\n      </Form.Item>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form} from \"antd\";\nimport {removeProp} from \"../../helpers/utility\";\n\nconst generatorFormItem = () => {\n    return WrappedComponent => {\n        class FormItem extends Component {\n            static contextTypes = {\n                form: PropTypes.object.isRequired\n            };\n\n            constructor(props) {\n                super(props);\n            }\n\n            render() {\n                const {getFieldDecorator} = this.context.form;\n                const {onChange, defaultValue, rules, name} = this.props;\n\n                const options = {};\n\n                if (rules) {\n                    options.rules = rules;\n                }\n\n                if (onChange) {\n                    options.onChange = onChange;\n                }\n\n                if (defaultValue) {\n                    options.initialValue = defaultValue;\n                }\n\n                const props = removeProp(this.props, 'defaultValue');\n\n                return (\n                    <Form.Item>\n                        {getFieldDecorator(name, options)(\n                            <WrappedComponent {...props}>\n                                {this.props.children}\n                            </WrappedComponent>\n                        )}\n                    </Form.Item>\n                );\n            }\n        }\n\n        return FormItem;\n    };\n};\n\nexport default generatorFormItem;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport generatorFormItem from \"../HOC/generatorFormItem\";\nimport {Input} from \"antd\";\nimport {addPropsComponent, removeProp} from \"../../helpers/utility\";\n\nconst InputComponent = generatorFormItem()(Input);\n\nexport default class FormInput extends Component {\n    static propTypes = {\n        rules: PropTypes.array,\n        name: PropTypes.string.isRequired,\n        defaultValue: PropTypes.string,\n        suffixClear: PropTypes.bool //check clear value of input when click suffix\n    };\n\n    static contextTypes = {\n        form: PropTypes.object.isRequired\n    };\n\n    getValue = () => {\n        return this.context.form.getFieldValue(this.props.name);\n    };\n\n    setValue = value => {\n        this.context.form.setFieldsValue({[this.props.name]: value});\n    };\n\n    //event clear value input\n    clear = () => {\n        this.setValue(\"\");\n    };\n\n    //add suffix clear when click suffix\n    addSuffixClearValueToProps = beforeProps => {\n        const value = this.getValue() === undefined ? beforeProps.defaultValue : this.getValue();\n\n        beforeProps = removeProp(beforeProps, \"suffixClear\");\n\n        if (value) {\n            let props = {\n                onClick: () => {\n                    this.clear();\n                }\n            };\n\n            // add props to suffix\n            return addPropsComponent(beforeProps, props, this.props.suffix, \"suffix\");\n        } else {\n            //remove suffix in props\n            return removeProp(beforeProps, \"suffix\");\n        }\n    };\n\n    render() {\n        const {suffixClear, suffix} = this.props;\n        let props = {...this.props};\n\n        if (suffixClear && suffix) {\n            props = this.addSuffixClearValueToProps(props);\n        }\n\n        return <InputComponent {...props} />;\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"antd\";\n\nclass CustomForm extends Component {\n  getChildContext() {\n    return {\n      form: this.props.form\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onSubmit(values);\n      }\n    });\n  };\n\n  getForm = () => {\n    return this.props.form;\n  };\n\n  render() {\n    return <Form onSubmit={this.handleSubmit}>{this.props.children}</Form>;\n  }\n}\n\nCustomForm.childContextTypes = {\n  form: PropTypes.object.isRequired\n};\n\nCustomForm.propTypes = {\n  className: PropTypes.string,\n  rules: PropTypes.array,\n  onSubmit: PropTypes.func\n};\n\nexport default Form.create()(CustomForm);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {translate} from \"react-i18next\";\nimport Form from '../../components/common/Form';\nimport FormInput from \"../../components/common/FormInput\";\nimport FormButton from \"../../components/common/FormButton\";\nimport {Alert} from \"antd\";\nimport classNamesBind from \"classnames/bind\";\nimport styles from './styles.less';\nimport {observer} from \"mobx-react\";\nimport Icon from \"../../components/common/Icon\";\n\nlet cx = classNamesBind.bind(styles);\n\n@observer\nclass EditInfo extends React.Component {\n    componentDidMount() {\n    }\n\n    updateProfileSuccess = (data) => {\n        const {account} = this.props;\n        account.updateAccount({...account, ...data});\n    };\n\n    handleSubmit = (data) => {\n        const {store, account} = this.props;\n        store.editInfoProfile({...account, ...data}, this.updateProfileSuccess);\n\n    };\n\n    renderMessageError = content => {\n        return (\n            <Alert\n                style={{marginBottom: 24}}\n                message={content}\n                type=\"error\"\n                showIcon\n            />\n        );\n    };\n\n    render() {\n        const {t, prefixCls, store, account} = this.props;\n        const {isUploading, errorUpload} = store;\n        const {name, username, phone, email} = account;\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: t(\"social.edit_profile.form.please_input_your_name\")\n                            }\n                        ]}\n                        defaultValue={name}\n                        prefix={<Icon type=\"solution\"/>}\n                        suffix={<Icon type=\"close-circle\"/>}\n                        suffixClear\n                        placeholder={t(\"social.edit_profile.form.placeholder_name\")}\n                    />\n                    <FormInput\n                        name=\"username\"\n                        prefix={<Icon type=\"user\"/>}\n                        suffix={<Icon type=\"close-circle\"/>}\n                        suffixClear\n                        defaultValue={username}\n                        placeholder={t(\"social.edit_profile.form.placeholder_username\")}\n                    />\n                    <FormInput\n                        name=\"email\"\n                        rules={[\n                            {\n                                type: 'email',\n                                message: t(\"social.edit_profile.form.email_invalid\"),\n                            }\n                        ]}\n                        prefix={<Icon type=\"mail\"/>}\n                        suffix={<Icon type=\"close-circle\"/>}\n                        suffixClear\n                        type=\"email\"\n                        defaultValue={email}\n                        placeholder={t(\"social.edit_profile.form.placeholder_email\")}\n                    />\n                    <FormInput\n                        name=\"phone\"\n                        prefix={<Icon type=\"phone\"/>}\n                        suffix={<Icon type=\"close-circle\"/>}\n                        suffixClear\n                        defaultValue={phone}\n                        placeholder={t(\"social.edit_profile.form.placeholder_phone\")}\n                    />\n\n                    {\n                        !isUploading &&\n                        errorUpload &&\n                        this.renderMessageError(errorUpload)\n                    }\n\n                    <FormButton\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className={cx(`${prefixCls}-info-submit`)}\n                        loading={isUploading}\n                    >\n                        {t(\"social.edit_profile.form.submit\")}\n                    </FormButton>\n                </Form>\n            </div>\n        );\n    }\n}\n\nEditInfo.defaultProps = {\n    prefixCls: 'module-edit-profile'\n};\n\nEditInfo.propTypes = {\n    store: PropTypes.object.isRequired\n};\n\nexport default translate(props => props.namespaces)(EditInfo);\n","import {observable, action} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../helpers/httpRequest\";\nimport {messageSuccess} from \"../../helpers/message\";\nimport {editInfoUserApi} from \"../../apis/accountApis\";\nimport {translateI18n} from \"../../languages/i18n\";\n\nclass Store {\n    @observable isUploading = false;\n    @observable errorUpload = null;\n\n    @action\n    async editInfoProfile(dataAccount, callbackSuccess) {\n\n        this.isUploading = true;\n        this.errorUpload = null;\n\n        try {\n            const res = await editInfoUserApi(dataAccount);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const info = data.data;\n\n                callbackSuccess(info);\n                messageSuccess(translateI18n('social.edit_profile.noti.upload_success'));\n            } else {\n                this.errorUpload = messageHttpRequest();\n            }\n        } catch (error) {\n            this.errorUpload = messageHttpRequest(error);\n        } finally {\n            this.isUploading = false;\n        }\n    }\n}\n\nexport default Store;","import React from \"react\";\n//import PropTypes from 'prop-types';\nimport {RoundShape, TextBlock} from \"react-placeholder/lib/placeholders\";\nimport loadingComponent from \"../../components/HOC/loadingComponent\";\nimport classNamesBind from \"classnames/bind\";\nimport styles from './styles.less';\n\nlet cx = classNamesBind.bind(styles);\n\nclass Loading extends React.Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const {prefixCls} = this.props;\n        return (\n            <div className={cx(`${prefixCls}-layout`)}>\n                <div className={cx(`${prefixCls}-layout-container`)}>\n                    <div className={cx(`${prefixCls}-layout-container-avatar`)}>\n                        <RoundShape color=\"#E0E0E0\" style={{width: 100, height: 100}}/>\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-container-info`)}>\n                        <TextBlock rows={5} color=\"#E0E0E0\"/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoading.defaultProps = {\n    prefixCls: 'module-edit-profile'\n};\n\nLoading.propTypes = {};\n\nexport default loadingComponent()(Loading);\n","import React from \"react\";\n//import PropTypes from 'prop-types';\nimport {translate} from \"react-i18next\";\nimport Loading from \"./Loading\";\nimport Store from './Store';\nimport {observer} from \"mobx-react\";\nimport Avatar from \"../../components/Avatar\";\nimport {LOGO} from \"../../constants\";\nimport {getValueObjectFromStringKey} from \"../../helpers/utility\";\nimport classNamesBind from \"classnames/bind\";\nimport styles from './styles.less';\nimport EditInfo from \"./EditInfo\";\nimport {withAccount} from \"../../components/context/AccountContext\";\n\nlet cx = classNamesBind.bind(styles);\n\n@observer\nclass EditProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.store = new Store();\n    }\n\n    render() {\n        const {prefixCls, account} = this.props;\n        const {isLoading} = account;\n\n        if (isLoading) {\n            return (\n                <Loading/>\n            );\n        }\n\n        const avatarUrl = getValueObjectFromStringKey(account, \"avatar_url\") ? account.avatar_url : LOGO;\n\n        return (\n            <div className={cx(`${prefixCls}-layout`)}>\n                <div className={cx(`${prefixCls}-layout-container`)}>\n                    <div className={cx(`${prefixCls}-layout-container-avatar`)}>\n                        <Avatar url={avatarUrl} size={100}/>\n                    </div>\n                    <div className={cx(`${prefixCls}-layout-container-info`)}>\n                        <EditInfo account={account} store={this.store}/>\n                    </div>\n                </div>\n            </div>\n        );\n\n\n    }\n}\n\nEditProfile.defaultProps = {\n    prefixCls: 'module-edit-profile'\n};\n\nEditProfile.propTypes = {};\n\nexport default translate(props => props.namespaces)(withAccount(EditProfile));\n"],"sourceRoot":""}