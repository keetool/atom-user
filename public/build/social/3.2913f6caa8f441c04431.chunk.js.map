{"version":3,"sources":["webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/socket.io-parser/node_modules/debug/src/debug.js","webpack:///./node_modules/socket.io-parser/node_modules/debug/src/browser.js","webpack:///./node_modules/socket.io-client/node_modules/debug/src/debug.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/engine.io-client/node_modules/debug/src/browser.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/socket.io-client/node_modules/debug/src/browser.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/engine.io-client/node_modules/debug/src/debug.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js","webpack:///./node_modules/buffer/node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/engine.io-client/lib/index.js"],"names":["global","isArray","__webpack_require__","isBuf","toString","Object","prototype","withNativeBlob","Blob","call","withNativeFile","File","exports","deconstructPacket","packet","buffers","packetData","data","pack","_deconstructPacket","attachments","length","placeholder","_placeholder","num","push","newData","Array","i","Date","key","reconstructPacket","_reconstructPacket","undefined","removeBlobs","callback","_removeBlobs","obj","curKey","containingObject","pendingBlobs","fileReader","FileReader","onload","this","result","bloblessData","readAsArrayBuffer","module","createDebug","debug","coerce","disable","enable","enabled","humanize","instances","names","skips","formatters","selectColor","namespace","hash","charCodeAt","colors","Math","abs","prevTime","self","curr","ms","diff","prev","args","arguments","unshift","index","replace","match","format","formatter","val","splice","formatArgs","logFn","log","console","bind","apply","useColors","color","destroy","init","indexOf","namespaces","save","split","len","RegExp","substr","instance","name","test","Error","stack","message","process","load","storage","chrome","local","localstorage","window","type","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","j","v","JSON","stringify","err","c","lastC","Function","removeItem","e","r","env","DEBUG","localStorage","parseuri","url","uri","loc","location","protocol","host","charAt","port","path","ipv6","id","href","keys","hasBinary","sliceBuffer","after","utf8","base64encoder","ArrayBuffer","isAndroid","isPhantomJS","dontSendBlobs","packets","open","close","ping","pong","upgrade","noop","packetslist","encodePacket","supportsBinary","utf8encode","buffer","encodeArrayBuffer","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeBlobAsArrayBuffer","fr","blob","b64","readAsDataURL","b64data","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","decodeBase64Packet","tryDecode","Number","substring","asArray","rest","decode","msg","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","setLengthHeader","encodeOne","doneCallback","map","results","join","ary","each","done","next","eachWithIndex","el","cb","error","decodePayload","decodePayloadAsBinary","n","l","chr","ret","encodedPackets","totalLength","reduce","acc","p","resultArray","bufferIndex","forEach","isString","ab","view","lenStr","binaryIdentifier","size","lengthAry","bufferTail","tailArray","msgLength","total","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","emit","slice","listeners","hasListeners","a","b","constructor","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","parser","Transport","opts","hostname","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","hasCORS","xdomain","xscheme","XMLHttpRequest","XDomainRequest","concat","binary","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Encoder","Decoder","ERROR_PACKET","encodeAsBinary","encoding","encodeAsString","nsp","payload","tryStringify","writeEncoding","deconstruction","reconstructor","add","decodeString","BinaryReconstructor","reconPack","takeBinaryData","buf","tryParse","isPayloadValid","parse","finishedReconstruction","binData","s","m","h","d","y","options","isNaN","long","fmtLong","fmtShort","exec","parseFloat","round","plural","floor","ceil","Manager","lookup","cache","managers","parsed","source","sameNamespace","nsps","newConnection","forceNew","multiplex","io","connect","Socket","ev","toArray","parseqs","hasBin","events","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","onopen","compress","pop","onclose","reason","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","arr","alphabet","seed","decoded","yeast","now","Buffer","isBuffer","toJSON","inherit","Polling","hasXHR2","xhr","responseType","forceBase64","poll","pause","onPause","polling","doPoll","callbackfn","doWrite","schema","sid","XHR","JSONP","websocket","xd","xs","jsonp","isSSL","forceJSONP","eio","Backoff","has","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","lastPing","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","skipReconnect","openSub","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","processPacketQueue","shift","subsLength","sub","reset","delay","duration","onreconnect","attempt","withNativeBuffer","withNativeArrayBuffer","isView","re","parts","src","authority","ipv6uri","factor","pow","rand","random","deviation","list","array","BrowserWebSocket","WebSocket","MozWebSocket","NodeWebSocket","WS","perMessageDeflate","usingBrowserWebSocket","protocols","check","headers","ws","supports","addEventListeners","onmessage","threshold","JSONPPolling","rNewline","rEscapedNewline","empty","___eio","script","parentNode","removeChild","form","iframe","createElement","async","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","area","iframeId","className","position","top","left","target","method","setAttribute","action","complete","initIframe","html","value","submit","attachEvent","onreadystatechange","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobConstructor","chars","arraybuffer","bytes","bufferLength","encoded1","encoded2","encoded3","encoded4","__WEBPACK_AMD_DEFINE_RESULT__","root","freeExports","freeModule","freeGlobal","stringFromCharCode","ucs2decode","string","output","counter","extra","ucs2encode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","version","object","count","err_cb","bail","proxy","start","end","abv","ii","read","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","toByteArray","fromByteArray","revLookup","Arr","code","getLens","validLen","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","maxChunkLength","len2","ieee754","SlowBuffer","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","__proto__","foo","subarray","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","poolSize","_augment","TypeError","fromArrayBuffer","fromString","fromObject","Symbol","species","defineProperty","configurable","assertSize","alloc","fill","checked","allocUnsafeSlow","isEncoding","actual","fromArrayLike","isnan","_isBuffer","compare","x","pos","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","includes","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","_arr","res","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","out","toHex","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","hi","lo","dst","Request","requestTimeout","request","req","sendXhr","pollXhr","create","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","response","unloadHandler","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","o","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades"],"mappings":"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","file":"3.2913f6caa8f441c04431.chunk.js","sourcesContent":["/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n"],"sourceRoot":""}