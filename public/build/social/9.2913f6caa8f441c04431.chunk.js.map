{"version":3,"sources":["webpack:///./src/modules/Post/Store.js","webpack:///./src/modules/Post/index.js"],"names":["_mobx","__webpack_require__","_httpRequest","_postApis","_Store","Store","postID","this","isLoading","error","getPostApi","res","data","httpSuccess","status","post","storePost","StorePost","messageHttpRequest","_context","t0","observable","action","_react","_styles","_bind","_mobxReact","_withTitle","_Loading","_Post","_utility","cx","classNamesBind","bind","styles","SinglePost","observer","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","store","match","params","getPost","_store","prefixCls","_react2","default","createElement","className","_Loading2","isEmpty","_Post2","React","Component","defaultProps","_withTitle2"],"mappings":"uaAAA,IAAAA,EAAAC,EAAA,KACA,IAAAC,EAAAD,EAAA,KACA,IAAAE,EAAAF,EAAA,KACA,IAAAG,EAAAH,EAAA,srCAEMI,oMAMYC,gGAEVC,KAAKC,UAAY,KACjBD,KAAKE,MAAQ,8BAES,EAAAN,EAAAO,YAAWJ,UAAvBK,SACAC,EAAOD,EAAIC,KAEjB,IAAI,EAAAV,EAAAW,aAAYF,EAAIG,QAAS,CACnBC,EAAOH,EAAKA,KAClBL,KAAKS,UAAY,IAAIC,UAAUF,OAC5B,CACHR,KAAKE,OAAQ,EAAAP,EAAAgB,2EAGjBX,KAAKE,OAAQ,EAAAP,EAAAgB,oBAAAC,EAAAC,sBAEbb,KAAKC,UAAY,8LAtBxBa,+DAAuB,qCACvBA,+DAAuB,kCACvBA,+DAAmB,iCAEnBC,2FAuBUjB,uXCjCf,IAAAkB,EAAAtB,EAAA,cACA,IAAAuB,EAAAvB,EAAA,gBACA,IAAAwB,EAAAxB,EAAA,gBACA,IAAAyB,EAAAzB,EAAA,KACA,IAAAG,EAAAH,EAAA,gBACA,IAAA0B,EAAA1B,EAAA,gBACA,IAAA2B,EAAA3B,EAAA,gBACA,IAAA4B,EAAA5B,EAAA,gBACA,IAAA6B,EAAA7B,EAAA,ooBAEA,IAAI8B,EAAKC,UAAeC,KAAKC,eAIvBC,KADLC,iCAEG,SAAAD,EAAYE,GAAOC,EAAA/B,KAAA4B,GAAA,IAAAI,EAAAC,EAAAjC,MAAA4B,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAArC,KACT8B,IACNE,EAAKM,MAAQ,IAAIxC,UAFF,OAAAkC,mDAKC,IACTjC,EAAUC,KAAK8B,MAAMS,MAAMC,OAA3BzC,OACPC,KAAKsC,MAAMG,QAAQ1C,sCAGd,IAAA2C,EAC0B1C,KAAKsC,MAA7B7B,EADFiC,EACEjC,UAAWR,EADbyC,EACazC,UADb,IAEE0C,EAAa3C,KAAK8B,MAAlBa,UACP,GAAI1C,EAAW,CACX,OACI2C,EAAAC,QAAAC,cAAA,OAAKC,UAAWvB,EAAMmB,EAAN,YACZC,EAAAC,QAAAC,cAACE,EAAAH,QAAD,WAIL,CACH,OACID,EAAAC,QAAAC,cAAA,OAAKC,UAAWvB,EAAMmB,EAAN,cAEP,EAAApB,EAAA0B,SAAQxC,IAAcmC,EAAAC,QAAAC,cAACI,EAAAL,SAAKP,MAAO7B,oBAzBnC0C,UAAMC,eAiC/BxB,EAAWyB,cACPV,UAAW,0BAGA,EAAAW,EAAAT,UAAA,CAAYjB","file":"9.2913f6caa8f441c04431.chunk.js","sourcesContent":["import {observable, action} from \"mobx\";\nimport {httpSuccess, messageHttpRequest} from \"../../helpers/httpRequest\";\nimport {getPostApi} from \"../../apis/postApis\";\nimport StorePost from \"../../components/Post/Store\";\n\nclass Store {\n    @observable storePost = null;\n    @observable isLoading = false;\n    @observable error = null;\n\n    @action\n    async getPost(postID) {\n\n        this.isLoading = true;\n        this.error = null;\n        try {\n            const res = await getPostApi(postID);\n            const data = res.data;\n\n            if (httpSuccess(res.status)) {\n                const post = data.data;\n                this.storePost = new StorePost(post);\n            } else {\n                this.error = messageHttpRequest();\n            }\n        } catch (error) {\n            this.error = messageHttpRequest(error);\n        } finally {\n            this.isLoading = false;\n        }\n    }\n}\n\nexport default Store;\n","import React from 'react';\nimport styles from './styles.less';\nimport classNamesBind from \"classnames/bind\";\nimport {observer} from \"mobx-react\";\nimport Store from \"./Store\";\nimport withTitle from \"../../components/HOC/withTitle\";\nimport Loading from \"../../components/Post/Loading\";\nimport Post from \"../../components/Post/Post\";\nimport {isEmpty} from \"../../helpers/utility\";\n\nlet cx = classNamesBind.bind(styles);\n\n// const HEADER_FIXED_TOP = true;\n@observer\nclass SinglePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.store = new Store();\n    }\n\n    componentDidMount() {\n        const {postID} = this.props.match.params;\n        this.store.getPost(postID);\n    }\n\n    render() {\n        const {storePost, isLoading} = this.store;\n        const {prefixCls} = this.props;\n        if (isLoading) {\n            return (\n                <div className={cx(`${prefixCls}-layout`)}>\n                    <Loading/>\n                </div>\n\n            );\n        } else {\n            return (\n                <div className={cx(`${prefixCls}-layout`)}>\n                    {\n                        !isEmpty(storePost) && <Post store={storePost}/>\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nSinglePost.defaultProps = {\n    prefixCls: \"module-post\"\n};\n\nexport default withTitle()(SinglePost);"],"sourceRoot":""}